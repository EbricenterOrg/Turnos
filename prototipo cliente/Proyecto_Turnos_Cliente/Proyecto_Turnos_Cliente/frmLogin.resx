<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAQfSURBVHhe7ZtNiBRHFMd3x6gRFT8whkQRlFUkoOSgQgTBmyFR
        0JsIXmIUWQy6Bol4CXsRZU9iVBD1pEJySRA8aKKiCB7EY1CjySKKGBYFFb/iR/w9X43O1LyZ6d6u3a0e
        +w8/WLveZ81sV3dt2VaoUKFCg6gxsLxUKu1rb28/CX/CZTjNtYOMrYSJYthqGkeD22n0MfzfhOfY7sXn
        Y3XNvxbR1L9ek0l4gO8KDZFfraKRp15jaXhJjM0aKn9aSgMvvIb6BbHWacj8aAqF3/UbycATYs7R0DmQ
        3NGNJrJy0oWPXtMp9j+v+CAQe6GmiFvbrOJDIM8PLke8otALfuEBuSkpNFOkosgnXtFBIcVkzRSnJlhF
        h4Qcn2uqOCU3QLPwUJBjsaaKU4PxDZirqeJUiSKDPP3VgxyfaqpIRZHX/aID8pAUwzRTpGKtPmoUHooz
        Lk3U+t4oPAhMbo/LEbU6rOJDQOxFmiJyUewlv/gA9EpozRC/thgNZIKv/w4XOxcaTdF3/CYycJ+YkzR0
        frTJaKRf8Ol3u5i50iiKly1vs6kU3CDWeA2ZP31GA4+8htLwlBjzNFR+tdZoLBH4dmmI/EvuBy/9Bhvw
        Cp9t6to6WkJjvV6jFrewXa4uracP4VuaPAuVfzB5DhcY64TRYvg+aCRMhWkgE1OoUKHWUJodmwnwkf6Y
        SNHuBsnJj9XcyU/AMb3UUPKy9BuUV4FzXGt6IIJ3gp+wPc+P6yGKkyQjYCNF9VU084hrDe/q8mpbYf8G
        rh11w3WF3T8VPrI/+CMM2bL5BUVcqyjoLYx9qSa2sLno+0CfG66n2YaPcJuxZWoyOJJdmR9IXHf7m09z
        t5rawsZ6S5QXn0ZqtNf4ipy7sBmupgMoEnUbBfhcdeamGE89AYzL/cX3qYLaDompegyMvrMSW2A7U11q
        xXjaCRjL+DPP3oRJ2Ol8gms+CeSZ3Uzsg/0GdasV42knQM4b+fZ1wT78yxSB//ATNeG4c60RY6kmgE91
        j2HfiCu4Bf1V+ISgad7nBVkOR6l7tRhLNQGMVS5/icBtvnqHkZz3MxM1Ar+v1L1ajKWZANlW822bgt9W
        dQ8gvoJyzNVM1Aj8ZGmqEWNpJqDLsG0KuQ87/+wi2H4rSQL+ciGqxPXEE8B1OVTt2ybhdxciu5iAA0aC
        ROA+S6O8E9eTTkDi5c/glIuRXRknoGY55PpV3w6eueFKpVr+POKYAHx/cWHKkjdB8wA1YzPURIVvj2WX
        kDgmAOTE9zfwAUwk1s+GTZnT2Mg+YQmW8e8sf1SJZgLKyPnBpM8SWRovE3QC9hoJYqfuk2h/1GkkiBo+
        tKDnCeT83z0/ScTIitKhpYfT1wRO8p+ehpoX1LpGSw6v2Xy1jpBEtsL+jpBfqXGBllqoUKFCzdTW9hqB
        3fi4V6SBpwAAAABJRU5ErkJggg==
</value>
  </data>
</root>